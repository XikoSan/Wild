# Generated by Django 3.1.3 on 2023-05-06 00:00

from django.db import migrations


class Migration(migrations.Migration):

    def move_stocks(apps, schema_editor):
        Good = apps.get_model('storage', 'Good')
        GoodLock = apps.get_model('storage', 'GoodLock')
        Storage = apps.get_model('storage', 'Storage')
        Stock = apps.get_model('storage', 'Stock')
        
        lock = GoodLock()
        
        for unit in ['coal', 'iron', 'bauxite', 'wti_oil', 'brent_oil', 'urals_oil', 'gas', 'diesel', 'plastic', 'steel', 'aluminium', 'medical', 'rifle', 'tank', 'mines', 'antitank', 'jet', 'pzrk', 'ifv', 'drone', 'drilling']:
            lock.lock_good = unit
            if not Good.objects.filter(name=lock.get_lock_good_display()).exists():                
                good = Good(
                            name=lock.get_lock_good_display(),
                            name_ru=lock.get_lock_good_display()
                            )
                good.save()                    
                    
        
        for storage in Storage.objects.filter(deleted=False):
        
            for unit in ['coal', 'iron', 'bauxite', 'wti_oil', 'brent_oil', 'urals_oil', 'gas', 'diesel', 'plastic', 'steel', 'aluminium', 'medical', 'rifle', 'tank', 'mines', 'antitank', 'jet', 'pzrk', 'ifv', 'drone', 'drilling']:
            
                if getattr(storage, unit) > 0:
                    lock.lock_good = unit
                    if not Stock.objects.filter(stock_storage=storage, good=Good.objects.get(name=lock.get_lock_good_display())).exists():
                        stock = Stock(stock_storage=storage,
                                      good=Good.objects.get(name=lock.get_lock_good_display()),
                                      stock=getattr(storage, unit)
                                     )
                        stock.save()
                    else:
                        stock = Stock.objects.get(stock_storage=storage, good=Good.objects.get(name=lock.get_lock_good_display()))
                        stock.stock += getattr(storage, unit)
                        stock.save()                
        
    dependencies = [
        ('storage', '0056_auto_20230506_0210'),
    ]

    operations = [
        migrations.RunPython(move_stocks),
    ]
