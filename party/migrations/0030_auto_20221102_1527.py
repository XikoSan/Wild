# Generated by Django 3.1.3 on 2022-11-02 12:27

from django.db import migrations
from django.utils import timezone
import json

def crontask_remake(apps, schema_editor):

    Party = apps.get_model("party", "Party")
    Primaries = apps.get_model("party", "Primaries")
    
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    
    CrontabSchedule = apps.get_model("django_celery_beat", "CrontabSchedule")
    
    
    parties = Party.objects.filter(deleted=False)
    
    for party in parties:
    
        foundation_day = party.foundation_date.weekday()

        if foundation_day == 6:
            cron_day = 0
        else:
            cron_day = foundation_day + 1
    
        if party.task is not None:
        
            if party.task.crontab.day_of_week != cron_day:            
        
                schedule = CrontabSchedule.objects.create(
                                            minute=str(party.foundation_date.minute),
                                            hour=str(party.foundation_date.hour),
                                            day_of_week=cron_day,
                                            day_of_month='*',
                                            month_of_year='*',
                                           )
                                           
                party.task.crontab = schedule
                
                party.task.save()
        
    
        if Primaries.objects.filter(party=party, task__isnull=False).exists():
            
            if cron_day == 6:
                cron_day = 0                
            else:
                cron_day += 1
                
            prims = Primaries.objects.get(party=party, task__isnull=False)
            
            if prims.task.crontab and prims.task.crontab.day_of_week != cron_day:
            
                schedule = CrontabSchedule.objects.create(
                                            minute=str(party.foundation_date.minute),
                                            hour=str(party.foundation_date.hour),
                                            day_of_week=cron_day,
                                            day_of_month='*',
                                            month_of_year='*',
                                           )
                                           
                prims.task.crontab = schedule
                
                prims.task.save()

        

class Migration(migrations.Migration):

    dependencies = [
        ('party', '0029_auto_20221029_2147'),
    ]

    operations = [
        migrations.RunPython(crontask_remake),
    ]
