# Generated by Django 3.2.18 on 2024-10-24 14:42

from django.db import migrations
from PIL import Image
from PIL import features
from io import BytesIO
from django.core.files.base import ContentFile
import os
    

def image_resize(apps, schema_editor):
    Player = apps.get_model('player', 'Player')

    for player in Player.objects.all():
        if player.image and os.path.isfile(player.image.path):
            # Открываем исходное изображение
            img = Image.open(player.image)

            # Создаем уменьшенную копию 75x75
            img_75 = img.resize((75, 75), Image.ANTIALIAS)
            img_io_75 = BytesIO()
            img_75.save(img_io_75, format='WEBP', quality=85)
            tiny_image_75_name = player.image.name.split('.')[0] + '_75.webp'
            player.image_75.save(tiny_image_75_name, ContentFile(img_io_75.getvalue()), save=False)

            # Создаем уменьшенную копию 33x33
            img_33 = img.resize((33, 33), Image.ANTIALIAS)
            img_io_33 = BytesIO()
            img_33.save(img_io_33, format='WEBP', quality=85)
            tiny_image_33_name = player.image.name.split('.')[0] + '_33.webp'
            player.image_33.save(tiny_image_33_name, ContentFile(img_io_33.getvalue()), save=False)

            # Сохраняем изменения
            player.save()


class Migration(migrations.Migration):

    dependencies = [
        ('player', '0096_auto_20241024_1742'),
    ]

    operations = [
        migrations.RunPython(image_resize),
    ]
